language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging

  - docker build -t udagram-feed-api ./udagram-feed-api --build-arg POSTGRES_USERNAME=${POSTGRES_USERNAME}  --build-arg POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  --build-arg POSTGRES_HOST=${POSTGRES_HOST}  --build-arg POSTGRES_DB=${POSTGRES_DB}  --build-arg AWS_BUCKET=${AWS_BUCKET}  --build-arg AWS_REGION=${AWS_REGION} --build-arg AWS_PROFILE=${AWS_PROFILE}  --build-arg JWT_SECRET=${JWT_SECRET}  --build-arg URL=${URL}
  - docker tag udagram-feed-api sabribouchlema/udagram-feed-api:latest

  - docker build -t udagram-users-api ./udagram-users-api --build-arg POSTGRES_USERNAME=${POSTGRES_USERNAME}  --build-arg POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  --build-arg POSTGRES_HOST=${POSTGRES_HOST}  --build-arg POSTGRES_DB=${POSTGRES_DB}  --build-arg AWS_BUCKET=${AWS_BUCKET}  --build-arg AWS_REGION=${AWS_REGION} --build-arg AWS_PROFILE=${AWS_PROFILE}  --build-arg JWT_SECRET=${JWT_SECRET}  --build-arg URL=${URL}
  - docker tag udagram-users-api sabribouchlema/udagram-users-api:latest

  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend sabribouchlema/udagram-frontend:latest

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push sabribouchlema/udagram-feed-api
  - docker push sabribouchlema/udagram-users-api
  - docker push sabribouchlema/udagram-frontend